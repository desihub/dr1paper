#!/usr/bin/env python

import os
from matplotlib import pyplot as plt
from astropy.coordinates import SkyCoord
import numpy as np
from astropy import units as u
from astropy.table import Table
from desiutil import dust
from desiutil.plots import plot_healpix_map, init_sky
from plot_utils import ar_init_sky, ar_plot_sky, plot_desi_bounds
import matplotlib
import healpy


def paint_map(r, d, dat, rad, weight=None, nside=512):
    import healpy
    npix = 12*nside**2
    vec = healpy.ang2vec(*lb2tp(r, d))
    map = np.zeros(npix)
    wmap = np.zeros(npix)
    if weight is None:
        weight = np.ones(len(dat), dtype='i4')
    for v, d, w in zip(vec, dat, weight):
        pix = healpy.query_disc(nside, v, rad*np.pi/180.)
        map[pix] += d
        wmap[pix] += w
    map = map / (wmap + (wmap == 0))
    return map, wmap


def lb2tp(l, b):
    return (90.-b)*np.pi/180., l*np.pi/180.


def progress_footprint(tmain):

    # ecliptic
    lgal = np.linspace(0, 360, endpoint=True)
    cgal = SkyCoord(l=lgal*u.deg, b=0*lgal*u.deg, frame='galactic')
    cecl = SkyCoord(lon=lgal*u.deg, lat=0*lgal*u.deg,
                    frame='geocentricmeanecliptic')

    # ebv
    ebv_nside, ebv_nest = 128, True
    ebv_pixs = np.arange(healpy.nside2npix(ebv_nside), dtype=int)
    ebv_ras, ebv_decs = healpy.pix2ang(ebv_nside, ebv_pixs, nest=ebv_nest, lonlat=True)
    ebv_vals = dust.ebv(ebv_ras, ebv_decs)

    # tiles
    tmain = tmain[tmain['IN_DESI'] != 0]
    mdict = {
        'dark' : tmain['PROGRAM'] == 'DARK',
        'bright' : tmain['PROGRAM'] == 'BRIGHT',
        'backup' : tmain['PROGRAM'] == 'BACKUP',
    }

    # loop on programs
    for i, (name, mprog) in enumerate(mdict.items()):

        print(name)

        # initialize figure
        fig = plt.figure(figsize=(10, 5), dpi=150)
        ax = fig.add_subplot(111, projection='mollweide')
        ax = init_sky(galactic_plane_color="none", ecliptic_plane_color="none", ax=ax)
        ax = ar_init_sky(des=False, desi=False, ax=ax)
        ax.grid(lw=0.25)
        ax.set_axisbelow(True)

        # ecliptic
        ras, decs = cecl.icrs.ra.degree, cecl.icrs.dec.degree
        ar_plot_sky(ax, ras, decs, c='k', lw=0.5, ls=':', zorder=10)

        # ebv
        ax.scatter(
            ax.projection_ra(ebv_ras),
            ax.projection_dec(ebv_decs),
            c=ebv_vals,
            s=1,
            alpha=0.05,
            cmap=matplotlib.cm.gray_r,
            vmin=0,
            vmax=1,
            rasterized=True,
        )

        # completeness
        avg, wt = paint_map(
            tmain['RA'][mprog], tmain['DEC'][mprog],
            np.clip(tmain['DONEFRAC'][mprog], 0, 1),
            1.6, nside=128
        )
        avg[wt == 0] = np.nan
        plot_healpix_map(
            avg, cmap=matplotlib.cm.get_cmap('Greens'), nest=False, ax=ax, colorbar=True,
            label='{} fraction completeness through 2022-06-13'.format(name.capitalize())
        )

        # desi boundaries
        plot_desi_bounds(ax, name.upper(), color="k", lw=2)

        # re-print ra labels... (rellay not nice!)
        ras = np.array([180, 150, 120, 90, 60, 30, 0, 330, 270, 240, 210])
        txts = np.array(['{0}Â°'.format(ra) for ra in ras])
        for ra, txt in zip(ras, txts):
            if ra == 60:
                tmpra = 59.8
            else:
                tmpra = ra
            ax.text(ax.projection_ra(np.array([tmpra])), ax.projection_dec(np.array([1.2])), txt, color="k", ha="center", va="bottom")

        # save
        plt.savefig('progress-{}.png'.format(name), bbox_inches='tight')
        plt.close()


if __name__ == '__main__':
    # pointing to my personal directory for now!  Needs to point to an r1776
    # check-out of the survey-ops product; this corresponds to 2022-06-14.
    tmainfn = os.path.expandvars(
        '$DESI_ROOT/users/schlafly/dr1paper/ops/tiles-main.ecsv')
    tmain = Table.read(tmainfn)
    progress_footprint(tmain)
